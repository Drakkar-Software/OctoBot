environment:
  matrix:
    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"
    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"

cache:
  - '%LOCALAPPDATA%\pip\Cache'

install:
  - "%PYTHON%\\python.exe -m pip install --upgrade pip"
  - "%PYTHON%\\python.exe -m pip install --prefer-binary -r requirements.txt -r dev_requirements.txt"
  - mkdir user
  - copy config\default_config.json user\config.json
#  - "%PYTHON%\\python.exe start.py -p install all"

build: off

test_script:
  - echo "todo"
#  - "%PYTHON%\\python.exe -m pytest -n 5 tests/unit_tests tests/functional_tests tests/endurance_tests"

after_test:
  - "%WITH_ENV% %PYTHON%\\python.exe setup.py build_ext --inplace"
  - "%WITH_ENV% %PYTHON%\\python.exe setup.py bdist_wheel"

on_success:
  - ps: |
      If ($env:APPVEYOR_REPO_TAG -eq "true") {
          Write-Output ("Deploying " + $env:APPVEYOR_REPO_TAG_NAME + " to PyPI...")
          &"${env:PYTHON}/python.exe" -m pip install twine
          &"${env:PYTHON}/python.exe" setup.py sdist bdist_wheel bdist_egg
          &"${env:PYTHON}/python.exe" -m twine upload -u ${env:PYPI_USERNAME} -p ${env:PYPI_PASSWORD} --skip-existing dist/*
      } else {
          Write-Output "No tag for deployment"
      }
