environment:
  matrix:
    - PYTHON: "C:\\Python37-x64"


install:
  - "%PYTHON%\\python.exe -m pip install -r pre_requirements.txt"
  - "%PYTHON%\\python.exe -m pip install -r requirements.txt -r dev_requirements.txt"
  - copy config\default_config.json config.json
  - "%PYTHON%\\python.exe start.py -p install all"

build_script:
  - if %APPVEYOR_REPO_TAG%=="true" (
    "%PYTHON%\\python.exe -m nltk.downloader -d %NLTK_DATA% all"&&
    "%PYTHON%\\Scripts\\pyinstaller.exe docs/delivery/start.spec"&&
    echo f | xcopy /f /y dist\OctoBot.exe dist\OctoBot_windows.exe)

test_script:
  - "%PYTHON%\\python.exe -m pytest tests/unit_tests"
  - "%PYTHON%\\python.exe -m pytest tests/functional_tests"
  -  "%PYTHON%\\python.exe -m pytest tests/endurance_tests"

artifacts:
  - path: dist/OctoBot_windows.exe
    name: OctoBot_windows.exe

deploy:
  - provider: Environment
    name: GITHUB_RELEASE_OCTOBOT
    draft: false
    prerelease: false
    artifact: OctoBot_windows.exe
    on:
      branch: beta
      APPVEYOR_REPO_TAG: true
