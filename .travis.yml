notifications:
  email: false
dist: xenial
os: linux
language: python
cache: pip
python: 3.7-dev
services:
  - docker
env:
  global:
    - GH_REPO=Drakkar-Software/OctoBot
    - DEPLOY_BRANCH=master
    - PACKAGE_FOLDER=octobot
    - TRAVIS_CLEANED_BRANCH=${TRAVIS_BRANCH////_}

before_install:
  - python3 -m pip install --upgrade pip
  - if [ -z $TRAVIS_TAG ]; then export TENTACLES_URL_TAG=latest; fi

install:
  - python3 -m pip install --prefer-binary -r dev_requirements.txt -r requirements.txt
  - mkdir user
  - cp ./config/default_config.json ./user/config.json
  - TENTACLES_URL_SUBCATEGORY=dev/ TENTACLES_URL_TAG=$TRAVIS_CLEANED_BRANCH python3 start.py tentacles -q --install --all || python3 start.py tentacles --install --all

jobs:
  include:
    - name: "Linux - Python 3.7-dev - Python sources"
      stage: test
      os: linux
      python: 3.7-dev
      language: python
      script:
        - pytest -n 5 --cov=. --cov-config=.coveragerc --durations=0 -rw tests
        - pytest tentacles
      after_success:
        - if [ $TRAVIS_PULL_REQUEST == "false" ]; then coveralls; fi

    - name: "Linux - Python 3.7-dev - Installed"
      stage: test
      os: linux
      python: 3.7-dev
      language: python
      script:
        - python3 setup.py build_ext --inplace
        - python3 setup.py install
        - rm -rf $PACKAGE_FOLDER
        - pytest -n 5 tests
        - pytest tentacles

    - name: "Linux - Docker - Deploy"
      stage: deploy
      os: linux
      before_install: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      install: skip
      script:
        - docker build . -t drakkarsoftware/octobot:$TRAVIS_CLEANED_BRANCH -f Dockerfile
      deploy:
          - provider: script
            script: docker push drakkarsoftware/octobot:$TRAVIS_CLEANED_BRANCH
            cleanup: false
            on:
              repo: "$GH_REPO"
              branch: "$DEPLOY_BRANCH"
              tags: true
              condition: "$TRAVIS_OS_NAME = 'linux'"

    - name: "Linux - Python 3 nightly - Deploy"
      stage: deploy
      script: skip
      deploy:
        - provider: pypi
          username: __token__
          password:
            secure: Exh7oIsqs6neRU1BFhr0doLCn6EIkoBsoahP2SKl7tMdbhKaPCjPVQ56WI7FGW5nhK+x6IvIY5x9MUqr/b/LHzMrkQKbcgwzllvQYeIB4GUbxOrkZk1ju0oYZpDVaba9qSuBP2xo/bV5zm7DHgMZA44nXQQZKg6vPXEwtNBYUCo5uaRob5kwX5IqLhsl23D1Xcrq8CM9deeUQ87q/gNmKfjOtwGx5EvM8/Ckp3UK2G3rU7uDREVMYDttrXeCpIoK8DSFvxTJ5Nfqt9wh7N6lnleJELab1mKv7MxxEkbSZIuSCe0HU1WNUlUwSIeYKZu1QK0UvI1xPWVS2lsTDf1ePU+gUAnXLhKBRDRa8cNAGyAiDpHQJVXr5KH2dfXdLZHmyWFpmafM5Ew6WWrqj+KeGhzdPXuc2Igojua9v6/GF3Cdbls2KfIy51awOiIsqyKYAphhTiNkt3uUB1mSJKgH8Pm0QWB1NHup4zTzRtu3Z0fRGHl69XJDO2cEOERqe5XQ89o8OGrjvFWsFanV5XYPrDoC/WFHp0aODg2fCz+goPrlYV6ri/5Wp1QxD4xb6BSGfmH0ymz260KR78TiyIpThcWxsIFEbhNFTdkZ7Sh5I5nNeBHZztup3eW+ESCwEwlp/21q778P2l5kVnJMB9VYbZEEqQlAUT2ZM//rQMgBKQA=
          skip_existing: true
          cleanup: false
          distributions: "sdist"
          on:
            repo: $GH_REPO
            branch: $DEPLOY_BRANCH
            tags: true
            condition: $TRAVIS_OS_NAME = 'linux'
        - provider: script
          script: docker run -it -e PYPI_USERNAME=$PYPI_USERNAME -e PYPI_PASSWORD=$PYPI_PASSWORD -v $(pwd):/project drakkarsoftware/octobot-pypi-deploy:i686 "i686" "cp37-cp37m" "cp37"
          cleanup: false
          on:
            repo: "$GH_REPO"
            branch: "$DEPLOY_BRANCH"
            tags: true
            condition: "$TRAVIS_OS_NAME = 'linux'"
        - provider: script
          script: docker run -it -e PYPI_USERNAME=$PYPI_USERNAME -e PYPI_PASSWORD=$PYPI_PASSWORD -v $(pwd):/project drakkarsoftware/octobot-pypi-deploy:x86_64 "x86_64" "cp37-cp37m" "cp37"
          cleanup: false
          on:
            repo: "$GH_REPO"
            branch: "$DEPLOY_BRANCH"
            tags: true
            condition: "$TRAVIS_OS_NAME = 'linux'"

    - name: "OSX - Python 3.7 - Deploy"
      stage: deploy
      os: osx
      osx_image: xcode11    # Python 3.7.2 running on macOS 10.14.3
      language: shell       # 'language: python' is an error on Travis CI macOS
      # python: 3.7         # 'python:' is ignored on Travis CI macOS
      before_install: python3 --version ; pip3 --version ; sw_vers
      install:
        - python3 -m pip install --prefer-binary --user -r requirements.txt
        - python3 -m pip install --prefer-binary -r dev_requirements.txt
      before_cache:
        - rm -f "$HOME/Library/Caches/pip/log/debug.log"
      cache:
        directories:
          - "$HOME/Library/Caches/pip"
      script:
        - python3 setup.py build_ext --inplace
#        - pytest --cov=. --cov-config=.coveragerc --durations=0 -rw tests
      deploy:
        - provider: script ..
          script: python3 setup.py bdist_wheel && python3 -m twine upload dist/* -u $PYPI_USERNAME -p $PYPI_PASSWORD --skip-existing
          cleanup: false
          on:
            repo: "$GH_REPO"
            branch: "$DEPLOY_BRANCH"
            tags: true
            condition: "$TRAVIS_OS_NAME = 'osx'"

    - name: "Linux - Heroku - Deploy"
      stage: edge
      os: linux
      before_install: echo "$HEROKU_TOKEN" | docker login --username=_ --password-stdin registry.heroku.com
      install: skip
      script: skip
      before_deploy:
        - docker pull drakkarsoftware/octobot:$TRAVIS_CLEANED_BRANCH
        - docker tag drakkarsoftware/octobot:$TRAVIS_CLEANED_BRANCH registry.heroku.com/$HEROKU_APP_NAME/octobot
        - docker push registry.heroku.com/$HEROKU_APP_NAME/octobot
      deploy:
        - provider: script
          script: heroku container:release octobot -a $HEROKU_APP_NAME
          cleanup: false
          on:
            repo: "$GH_REPO"
            branch: "$DEPLOY_BRANCH"
            tags: true
            condition: "$TRAVIS_OS_NAME = 'linux'"

after_failure:
  - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh failure https://discordapp.com/api/webhooks/$WEBHOOK_TOKEN
