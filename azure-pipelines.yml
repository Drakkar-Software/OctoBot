trigger:
  branches:
    include:
    - master
    - dev
    - 0.4.0
  tags:
    include:
    - '*'
  paths:
    include:
    -  '*'

pr:
  autoCancel: true
  branches:
    include:
    - '*'

jobs:
- job: Windows
  pool:
    vmImage: 'windows-latest'
  strategy:
    maxParallel: 2
    matrix:
        Python37-32bit-full:
          PYTHON_VERSION: '3.7'
          PYTHON_ARCH: 'x86'
        Python37-64bit-full:
          PYTHON_VERSION: '3.7'
          PYTHON_ARCH: 'x64'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(PYTHON_VERSION)
      addToPath: true
      architecture: $(PYTHON_ARCH)
  - script: |
      python -m pip install --upgrade pip setuptools wheel
      python -m pip install --prefer-binary -r requirements.txt -r dev_requirements.txt
    displayName: 'Install dependencies'
  - powershell: |
      mkdir user
      copy config\default_config.json user\config.json
      $Env:TENTACLES_URL_SUBCATEGORY = "dev/"
      $Env:TENTACLES_URL_TAG = $env:build_sourceBranchName -replace "/", "_"
      python start.py tentacles -q --install --all
      if ($LastExitCode -ne 0)
      {
        $Env:TENTACLES_URL_SUBCATEGORY = ""
        If ($env:build_sourceBranch -Contains "refs/tags/") {
          $Env:TENTACLES_URL_TAG = "latest"
        } else {
          $Env:TENTACLES_URL_TAG = ""
        }
        python start.py tentacles --install --all
      }
    displayName: 'Install OctoBot environment'
  - script: |
      python setup.py build_ext --inplace
      python setup.py install
    displayName: 'Install OctoBot'
  - script: python -m pytest tests
    displayName: 'Run OctoBot tests'
  - script: python -m pytest tentacles
    displayName: 'Run tentacles tests'
  - script: python setup.py bdist_wheel bdist_msi
    displayName: 'Building wheel'
  - task: TwineAuthenticate@1
    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
    displayName: 'Official Twine Authenticate'
    inputs:
      pythonUploadServiceConnection: pypi-official
  - script: python -m twine upload -r "pypi-official" --config-file $(PYPIRC_PATH) --skip-existing dist/*
    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
    displayName: 'Uploading wheel'

- job: macOS
  pool:
    vmImage: 'macOS-latest'
  strategy:
    maxParallel: 2
    matrix:
        Python37-64bit-full:
          PYTHON_VERSION: '3.7'
          PYTHON_ARCH: 'x64'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: $(PYTHON_VERSION)
      addToPath: true
      architecture: $(PYTHON_ARCH)
  - script: |
      python -m pip install --upgrade pip setuptools wheel
      python -m pip install --prefer-binary -r requirements.txt -r dev_requirements.txt
    displayName: 'Install dependencies'
  - script: |
      mkdir user
      copy config\default_config.json user\config.json
      TENTACLES_URL_SUBCATEGORY=dev/ TENTACLES_URL_TAG=${BUILD_SOURCEBRANCHNAME////_} python3 start.py tentacles -q --install --all || python3 start.py tentacles --install --all
    displayName: 'Install OctoBot environment'
  - script: |
      python setup.py build_ext --inplace
      python setup.py install
    displayName: 'Install OctoBot'
  - script: python -m pytest tests
    displayName: 'Run OctoBot tests'
  - script: python -m pytest tentacles
    displayName: 'Run tentacles tests'
  - script: python setup.py bdist_wheel
    displayName: 'Building wheel'
  - task: TwineAuthenticate@1
    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
    displayName: 'Official Twine Authenticate'
    inputs:
      pythonUploadServiceConnection: pypi-official
  - script: python -m twine upload -r "pypi-official" --config-file $(PYPIRC_PATH) --skip-existing dist/*
    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
    displayName: 'Uploading wheel'
